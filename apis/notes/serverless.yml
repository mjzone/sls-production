service: notes-prod
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  environment:
    STAGE: ${self:custom.stage}
    NOTES_TABLE: !Ref NotesTable

custom:
  stage: ${opt:stage, self:provider.stage}

functions:
  createNote:
    handler: functions/createNote.handler
    events:
      - http:
          path: notes
          method: post
          request:
            schemas:
              application/json: ${file(schemas/Note.json)}
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt NotesTable.Arn

  updateNote:
    handler: functions/updateNote.handler
    events:
      - http:
          path: notes/{id}
          method: put
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:UpdateItem
        Resource: !GetAtt NotesTable.Arn

  getNote:
    handler: functions/getNote.handler
    events:
      - http:
          path: notes/{id}
          method: get
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:GetItem
        Resource: !GetAtt NotesTable.Arn

  deleteNote:
    handler: functions/deleteNote.handler
    events:
      - http:
          path: notes/{id}
          method: delete
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:DeleteItem
        Resource: !GetAtt NotesTable.Arn

  getAllNotes:
    handler: functions/getAllNotes.handler
    events:
      - http:
          path: notes
          method: get
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:Scan
        Resource: !GetAtt NotesTable.Arn

resources:
  Resources: ${file(resources.yml)}

plugins:
  - serverless-iam-roles-per-function
